name: project_workflow

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  linter_job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run lint

  cypress_job:
    needs: linter_job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - name: Run Cypress
        id: cypress
        uses: cypress-io/github-action@v6
        continue-on-error: true
        with:
          build: npm run build
          start: npm run start
          wait-on: http://localhost:3000
      - name: Save outcome
        run: echo "${{ steps.cypress.outcome }}" > result.txt
      - uses: actions/upload-artifact@v4
        with:
          name: cypress-result
          path: result.txt

  add_badge_job:
    needs: cypress_job
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
      - uses: actions/download-artifact@v4
        with:
          name: cypress-result
      - name: Read outcome
        id: parse
        run: echo "cypress_outcome=$(cat result.txt | tr -d '\r\n')" >> $GITHUB_OUTPUT
      - name: Update README badge
        uses: ./.github/actions
        with:
          outcome: ${{ steps.parse.outputs.cypress_outcome }}
      - name: Commit and push README
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git add README.md
          git commit -m "chore: update test badge" || echo "No changes"
          git push

  deploy_job:
    needs: cypress_job
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: .
          prod: true

  notification_job:
    needs: [linter_job, cypress_job, add_badge_job, deploy_job]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Compose subject and body
        id: compose
        run: |
          echo "subject=Resultat del workflow executat" >> $GITHUB_OUTPUT
          {
            echo "body<<EOF"
            echo "S'ha realitzat un push en la branca main que ha provocat l'execució del workflow project_workflow amb els següents resultats:"
            echo
            echo "- linter_job: ${{ needs.linter_job.result }}"
            echo "- cypress_job: ${{ needs.cypress_job.result }}"
            echo "- add_badge_job: ${{ needs.add_badge_job.result }}"
            echo "- deploy_job: ${{ needs.deploy_job.result }}"
            echo "EOF"
          } >> $GITHUB_OUTPUT
      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: ${{ steps.compose.outputs.subject }}
          to: ${{ secrets.NOTIFY_TO }}
          from: "CI Bot <${{ secrets.SMTP_USERNAME }}>"
          content_type: text/plain
          body: ${{ steps.compose.outputs.body }}
