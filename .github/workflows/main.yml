name: project_workflow

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  linter_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run Linter
        run: npm run lint

  cypress_job:
    needs: linter_job
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run Cypress tests
        id: cypress
        uses: cypress-io/github-action@v6
        continue-on-error: true     
        with:
          build: npm run build
          start: npm run start
          wait-on: http://localhost:3000

      - name: Save Cypress outcome
        shell: pwsh
        run: |
          $OUTCOME = "${{ steps.cypress.outcome }}"
          Set-Content -Path result.txt -Value $OUTCOME

      - name: Upload result artifact
        uses: actions/upload-artifact@v4
        with:
          name: cypress-result
          path: result.txt

      - name: Mark job as successful (even if Cypress failed)
        if: always()
        run: echo "Cypress finished with ${{ steps.cypress.outcome }} but job passes âœ…"

  add_badge_job:
    needs: cypress_job
    if: always()                      
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Download Cypress result
        uses: actions/download-artifact@v4
        with:
          name: cypress-result

      - name: Read Cypress outcome
        id: parse
        shell: pwsh
        run: |
          $OUTCOME = (Get-Content -Raw result.txt).Trim()
          echo "cypress_outcome=$OUTCOME" >> $env:GITHUB_OUTPUT

      - name: Update README with custom badge action
        uses: ./.github/actions
        with:
          outcome: ${{ steps.parse.outputs.cypress_outcome }}

      - name: Commit and push README
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "chore: update test badge" || echo "No changes"
          git push
